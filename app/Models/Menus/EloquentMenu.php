<?php
namespace App\Models\Menus;

use App\Repositories\BaseRepository;

class EloquentMenu extends BaseRepository implements MenuRepository
{
    public function __construct(Menu $menu)
    {
        $this->model = $menu;
    }

    /**
     * Created by : BillJanny
     * Date: 12:49 AM - 2/10/2017
     * Lay thong tin vi tri mac dih cua menu duoc thiet lap truoc ton trai trong model Menus
     * @param void
     * @return array
     */
    public function getConfigPosition()
    {
        return $this->model->getPosition();
    }

    /**
     * Lay thong tin targe mac dinh cua menu duoc thiet lap trong model
     * @param void
     * @return array
     */
    public function getConfigTarget()
    {
        return $this->model->getTarget();
    }

    /**
     * Store a new infomation
     * @param array $data : mang du lieu
     * @return mixed
     */
    public function storeMenu($data)
    {
        return $this->storeData($data);
    }

    /**
     * Luu thong tin mot menu
     * @param int $id : truong khoa chinh cua bang menu
     * @param array $data : mang du lieu can update
     * @return
     */
    public function updateMenuById($id, $data)
    {
        return $this->updateById($id, $data);
    }

    /**
     * Tim kiem mot ban ghi bang id
     * @param int $id : truong khoa chinh cua bang
     * @return mixed
     */
    public function findMenuById($id)
    {
        return $this->findById($id);
    }

    /**
     * Delete a or many record by id
     * @param int | array $id : truong khoa chinh cua bang
     * @return mixed
     */
    public function deleteMenuById($id)
    {
        return $this->delete($id);
    }

    /**
     * Get tat ca menu
     * @param array $arrayColumn : mang column se duoc chon hien thi
     * @param array $filter : mang filter
     * @param array $arrayField : mang column se duoc chon hien thi
     * @param string $search :
     * @param string $sort :
     * @return mixed
     */
    public function getAllMenu($arrayField = array(), $filter = array(), $search = false, $sort = array())
    {
        // TODO: Implement getAllMenu() method.
        return $this->getAllChild('menus', 'mnu_id', 'mnu_parent_id', 0, $filter, $arrayField, $sort, $search);
    }

    /**
     * Update thoong tin ung voi tung field duoc truyen vao
     * @param int $id : truong khoa chinh cua bang
     * @param string $field : ten cot du lieu trong csdl can update
     * @param string $otherValue : gia tri can update thong tin
     * @return mixed
     */
    public function updateByField($id, $field, $otherValue = '')
    {
        // TODO: Change the autogenerated stub
        return parent::updateByField($id, $field, $otherValue);
    }

    /**
     * Created by : Hungokata
     * Time : 7:55 PM / 2/13/2017
     * @param array $condition : mảng điều kiện column opera value
     * @param array $arrayColumn : mảng column sẽ lấy mặc định default
     * @return mixed
     */
    public function checkExistMenuChild($condition = array(), $arrayColumn = array('*'))
    {
        return $this->findBy($condition,  $arrayColumn);
    }

    /**
     * Update thong tin neu ton tai haschild
     * @param int  $menuParentId : field parent_id cua bang menu
     * @param int $hasChild : xac dinh co ton tai child hay khong
     * @param int $mnuId : truong khoa chinh cua bang
     * @param string $action : hanh dong add | edit
     * @return mixed
     */
    public function updateMenuHasChild($mnuParentId, $hasChild=0, $mnuId=0, $action='add')
    {
        // Tim kiem trong bang menu ung voi $mnuParentId
        $menu           = $this->findById($mnuParentId);
        $menuAllChild   = $menu->mnu_all_child ? explode(',', $menu->mnu_all_child) : array();

        // Cho trường hơp $action = edit mới thực hiện
        if (strtolower($action) == 'edit')
        {
            $c = null;
            foreach ($menuAllChild as $k => $v)
            {
                if ($v)
                {
                    // Xóa đi các menu trùng trong chuỗi
                    if ($c== $v) unset($menuAllChild[$k]);
                    $c = $v;
                    // Xóa đi menu đang update tồn tại ở list all child menu parent id trước đó
                    if ($v == $mnuId) unset($menuAllChild[$k]);
                }
            }

            // Check lại $menuParentId tồn tại cate child k. Nếu k tồn tại thì cate_has_child = 0 ||cate_has_child = 1
            $menuSelect     = $this->checkExistMenuChild(array('mnu_parent_id', '=', $mnuParentId));
            $hasChild       = $menuSelect ? 1 : 0;
        }

        // Thêm $mnuId mới vừa được tạo vào trong all list child của $mnuParentId
        if ($action == 'add')
        {
            $menuAllChild[] = $mnuId;
            if (! in_array($mnuParentId, $menuAllChild)) array_unshift($menuAllChild, $mnuParentId);
        }

        // Cap nhat thong tin
        $menuAllChild  = conver_unique_array_tostring($menuAllChild);
        $dataFill      = ['mnu_has_child'=> $hasChild, 'mnu_all_child'=> $menuAllChild];
        $updateMenu    = $menu->fill($dataFill)->save();

        return $updateMenu;
    }
}